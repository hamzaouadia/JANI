services:
  # ---------------- MongoDB ----------------
  mongo:
    image: mongo:6
    container_name: jani-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  # ---------------- Redis ----------------
  redis:
    image: redis:7
    container_name: jani-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  # ---------------- Auth Service ----------------
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: jani-auth
    env_file:
      - .env
    environment:
      MONGO_URI: mongodb://mongo:27017/jani-ai-auth
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${AUTH_PORT}
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    depends_on:
      - mongo
      - redis
    restart: unless-stopped

  # ---------------- AI Service ----------------
  ai:
    build:
      context: ./services/ai
      dockerfile: Dockerfile
    container_name: jani-ai
    env_file:
      - .env
    environment:
      PORT: ${AI_PORT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${AI_PORT}:${AI_PORT}"
    depends_on:
      - redis
    restart: unless-stopped

  # ---------------- User Service ----------------
  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    container_name: jani-user
    env_file:
      - .env
    environment:
      PORT: ${USER_PORT}
      MONGO_URI: mongodb://mongo:27017/jani-ai-user
    ports:
      - "${USER_PORT}:${USER_PORT}"
    depends_on:
      - mongo
    restart: unless-stopped

  # ---------------- Next.js Frontend ----------------
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: jani-web
    working_dir: /app
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_AUTH_URL: ${NEXT_PUBLIC_AUTH_URL}
      PORT: ${WEB_PORT}
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    depends_on:
      - auth
    restart: unless-stopped

  # ---------------- React Native Metro ----------------
  mobile:
    build:
      context: ./apps/mobile
      dockerfile: Dockerfile
    container_name: jani-mobile
    working_dir: /app
    command: ["sh", "-c", "npm install && npm run start"]
    volumes:
      - ./apps/mobile:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    ports:
      - "8081:8081" # Metro bundler
    depends_on:
      - auth
    restart: unless-stopped

volumes:
  mongodata:
  redisdata:
