name: Quality Gate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  web:
    name: Web - Lint & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm install --workspace apps/web

      - name: Lint
        run: npm run lint --workspace apps/web

      - name: Build
        run: npm run build --workspace apps/web

  mobile:
    name: Mobile - Lint, Types, Tests
    runs-on: ubuntu-latest
    env:
      CI: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: apps/mobile/package-lock.json

      - name: Install dependencies
        working-directory: apps/mobile
        run: npm ci

      - name: Lint
        working-directory: apps/mobile
        run: npm run lint

      - name: Type check
        working-directory: apps/mobile
        run: npm run typecheck

      - name: Unit tests
        working-directory: apps/mobile
        run: npm run test -- --watchAll=false

  services:
    name: Services - Build & Sanity Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Enable pnpm
        run: corepack enable pnpm@10

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('services/auth/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install auth dependencies
        working-directory: services/auth
        run: pnpm install --frozen-lockfile

      - name: Build auth service
        working-directory: services/auth
        run: pnpm run build

      - name: Validate AI service syntax
        run: node --check services/ai/server.js

      - name: Validate User service syntax
        run: node --check services/user/server.js

  docker:
    name: Docker Compose Build Validation
    runs-on: ubuntu-latest
    needs:
      - web
      - mobile
      - services
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Compose config
        run: docker compose -f docker-compose.yml config

      - name: Docker Compose build
        run: docker compose -f docker-compose.yml build --parallel
